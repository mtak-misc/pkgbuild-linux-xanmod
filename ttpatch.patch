--- tt-6.0.patch	2022-11-08 22:46:02.443169070 +0900
+++ tt.patch	2022-11-08 22:47:18.038180046 +0900
@@ -1268,7 +1268,7 @@ index 914096c5b1ae..95774ec52c6b 100644
  static int wake_affine(struct sched_domain *sd, struct task_struct *p,
  		       int this_cpu, int prev_cpu, int sync)
  {
-@@ -7020,15 +7682,31 @@ select_task_rq_fair(struct task_struct *p, int prev_cpu, int wake_flags)
+@@ -7020,11 +7682,23 @@ select_task_rq_fair(struct task_struct *p, int prev_cpu, int wake_flags)
  	int want_affine = 0;
  	/* SD_flags and WF_flags share the first nibble */
  	int sd_flag = wake_flags & 0xF;
@@ -1291,15 +1291,7 @@ index 914096c5b1ae..95774ec52c6b 100644
  	if (wake_flags & WF_TTWU) {
 +#endif
  		record_wakee(p);
- 
-+#ifdef CONFIG_TT_SCHED
-+		if (IS_PWR_BL_ENABLED || sched_energy_enabled()) {
-+#else
- 		if (sched_energy_enabled()) {
-+#endif
- 			new_cpu = find_energy_efficient_cpu(p, prev_cpu);
- 			if (new_cpu >= 0)
- 				return new_cpu;
+ 		want_affine = !wake_wide(p) new_cpu = find_energy_efficient_cpu(p, prev_cpu);new_cpu = find_energy_efficient_cpu(p, prev_cpu); cpumask_test_cpu(cpu, p->cpus_ptr);
 @@ -7038,41 +7716,66 @@ select_task_rq_fair(struct task_struct *p, int prev_cpu, int wake_flags)
  		want_affine = !wake_wide(p) && cpumask_test_cpu(cpu, p->cpus_ptr);
  	}
