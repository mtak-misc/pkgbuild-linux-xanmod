--- tt.patch	2023-03-24 23:04:12.237056317 +0900
+++ tt.patch.new	2023-03-24 23:04:35.056409174 +0900
@@ -1252,7 +1252,7 @@
  static int wake_affine(struct sched_domain *sd, struct task_struct *p,
  		       int this_cpu, int prev_cpu, int sync)
  {
-@@ -7369,15 +8030,31 @@ select_task_rq_fair(struct task_struct *p, int prev_cpu, int wake_flags)
+@@ -7369,11 +8030,23 @@ select_task_rq_fair(struct task_struct *p, int prev_cpu, int wake_flags)
  	int want_affine = 0;
  	/* SD_flags and WF_flags share the first nibble */
  	int sd_flag = wake_flags & 0xF;
@@ -1276,14 +1276,6 @@
 +#endif
  		record_wakee(p);
  
-+#ifdef CONFIG_TT_SCHED
-+		if (IS_PWR_BL_ENABLED || sched_energy_enabled()) {
-+#else
- 		if (sched_energy_enabled()) {
-+#endif
- 			new_cpu = find_energy_efficient_cpu(p, prev_cpu);
- 			if (new_cpu >= 0)
- 				return new_cpu;
 @@ -7387,41 +8064,66 @@ select_task_rq_fair(struct task_struct *p, int prev_cpu, int wake_flags)
  		want_affine = !wake_wide(p) && cpumask_test_cpu(cpu, p->cpus_ptr);
  	}
