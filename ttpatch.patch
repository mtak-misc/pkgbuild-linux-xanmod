--- tt.patch.orig	2023-04-25 23:06:12.188119745 +0900
+++ tt.patch	2023-04-25 23:05:21.361014863 +0900
@@ -1272,7 +1272,7 @@
  static int wake_affine(struct sched_domain *sd, struct task_struct *p,
  		       int this_cpu, int prev_cpu, int sync)
  {
-@@ -7658,15 +8318,31 @@ select_task_rq_fair(struct task_struct *p, int prev_cpu, int wake_flags)
+@@ -7658,11 +8318,23 @@ select_task_rq_fair(struct task_struct *p, int prev_cpu, int wake_flags)
  	int want_affine = 0;
  	/* SD_flags and WF_flags share the first nibble */
  	int sd_flag = wake_flags & 0xF;
@@ -1296,14 +1296,6 @@
 +#endif
  		record_wakee(p);
  
-+#ifdef CONFIG_TT_SCHED
-+		if (IS_PWR_BL_ENABLED || sched_energy_enabled()) {
-+#else
- 		if (sched_energy_enabled()) {
-+#endif
- 			new_cpu = find_energy_efficient_cpu(p, prev_cpu);
- 			if (new_cpu >= 0)
- 				return new_cpu;
 @@ -7615,41 +8291,66 @@ select_task_rq_fair(struct task_struct *p, int prev_cpu, int wake_flags)
  		want_affine = !wake_wide(p) && cpumask_test_cpu(cpu, p->cpus_ptr);
  	}
