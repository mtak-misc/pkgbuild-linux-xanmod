name: build-linux-xanmod-bore

on:
  workflow_dispatch:
    inputs:
      apply_patch:
        type: boolean
        required: true
        description: "Apply patch flag"
env:
  PKGDEST: "/tmp/linux-xanmod-bore"

jobs:
  build:
    runs-on: ubuntu-latest
    container: archlinux:latest    
    steps:
      - name: Checkount repo
        uses: actions/checkout@v3    
      - name: Checkount linux-xanmod-bore repo
        uses: actions/checkout@v3
        with: 
          repository: micros24/linux-xanmod-bore
          ref: 6.6
          path: linux-xanmod-bore
      - name: Prepare for makepkg
        run: |
          pacman -Syu --noconfirm base-devel sudo git
          useradd builder -m -G wheel && echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
          chown builder -R ..
          chown builder -R /tmp
          su builder -c "gpg --recv 38DBBDC86092693E"
      - name: Apply patches
        if: ${{ github.event.inputs.apply_patch == 'true' }}
        run: |
          cd linux-xanmod-bore
          export OLD=$(sha256sum 0001-bore.patch | awk '{ print $1}')
          curl -L https://raw.githubusercontent.com/firelzrd/bore-scheduler/main/patches/linux-6.6-bore/0001-linux6.6.y-bore3.5.7.patch -o 0001-bore.patch 
          export NEW=$(sha256sum 0001-bore.patch | awk '{ print $1}')
          echo "sed -i 's/${OLD}/${NEW}/g' PKGBUILD" | bash
          sed -i '/echo "Setting version..."/i \ \ patch -Np1 -i ../../../fair.patch' PKGBUILD
          curl -LO https://sourceforge.net/projects/xanmod/files/releases/main/6.6.5-xanmod1/patch-6.6.5-xanmod1.xz
          export NEW=$(sha256sum patch-6.6.5-xanmod1.xz | awk '{ print $1}')
          curl -LO https://sourceforge.net/projects/xanmod/files/releases/main/6.6.4-xanmod1/patch-6.6.4-xanmod1.xz
          export OLD=$(sha256sum patch-6.6.4-xanmod1.xz | awk '{ print $1}')
          echo "sed -i 's/${OLD}/${NEW}/g' PKGBUILD" | bash
          sed -i 's/pkgver=${_major}.4/pkgver=${_major}.5/g' PKGBUILD
#          sed -i 's/releases\/edge/releases\/main/g' PKGBUILD
#          export OLD=$(sha256sum 0005-o3-optimization.patch | awk '{ print $1}')
#          curl -L https://raw.githubusercontent.com/Frogging-Family/linux-tkg/master/linux-tkg-patches/6.6/0013-optimize_harder_O3.patch -o 0005-o3-optimization.patch
#          export NEW=$(sha256sum 0005-o3-optimization.patch | awk '{ print $1}')
#          echo "sed -i 's/${OLD}/${NEW}/g' PKGBUILD" | bash
#          export OLD=$(sha256sum 0001-bore.patch | awk '{ print $1}')
#          curl -L https://raw.githubusercontent.com/firelzrd/bore-scheduler/main/patches/linux-6.6-bore/0001-linux6.6.y-bore3.4.0.patch -o 0001-bore.patch 
#          export NEW=$(sha256sum 0001-bore.patch | awk '{ print $1}')
#          echo "sed -i 's/${OLD}/${NEW}/g' PKGBUILD" | bash
#          sed -i '/0002-constgran-vanilla-max/d' PKGBUILD
#          sed -i '/0003-glitched-cfs/d' PKGBUILD
#          sed -i '/0004-glitched-cfs-additions/d' PKGBUILD
#          curl -LO https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.5.tar.xz
#          export OLD=$(sha256sum linux-6.5.tar.xz | awk '{ print $1}')
#          curl -LO https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.6.tar.xz
#          export NEW=$(sha256sum linux-6.6.tar.xz | awk '{ print $1}')
#          echo "sed -i 's/${OLD}/${NEW}/g' PKGBUILD" | bash
#          sed -i 's/_major=6.5/_major=6.6/g' PKGBUILD
#          sed -i 's/sourceforge.net\/projects/master.dl.sourceforge.net\/project/g' PKGBUILD
#          sed -i 's/rm "$_modulesdir"/rm -f "$_modulesdir"/g' PKGBUILD
#          curl -LO https://github.com/firelzrd/bore-scheduler/raw/main/patches/linux-6.5-eevdf-bore/0001-EEVDF.patch
#          patch -N -i ../eevdfpatch.patch 
#          sed -i '/echo "Setting version..."/i \ \ patch -Np1 -i ../../0001-EEVDF.patch' PKGBUILD
#          curl -L https://raw.githubusercontent.com/firelzrd/bore-scheduler/9e175253c03ac13cc493b728a3ee1637bdc15950/patches/linux-6.5-eevdf-bore/0002-linux6.5.y-eevdf-bore3.2.8.patch -o 0001-bore.patch 
#          patch -N -i ../borepatch.patch
      - name: Build
        run: |
          cd linux-xanmod-bore
          su builder -c "yes '' | MAKEFLAGS=\"-j $(nproc)\" makepkg --noconfirm -sc" 
#          su builder -c "yes '' | makepkg --noconfirm -sc"
      - uses: actions/upload-artifact@v3
        with:
          name: linux-xanmod-bore
          path: ${{ env.PKGDEST }}/*.pkg.tar.zst
        
