name: build-linux-xanmod

on:
  workflow_dispatch:
    inputs:
      use_edge:
        type: boolean
        required: false
        description: "Use edge"
      new_kernel_minor_ver:
        type: string
        required: false
        description: "New kernel minor version"
      new_kernel_patch_ver:
        type: string
        required: false
        description: "New kernel patch version"
jobs:
  build:
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Cleanup
#        if: ${{ 'true' == 'false' }}
        run: |
          sh ./cleanup.sh
      - name: Prepare for makepkg
        run: |
          git clone --depth 1 https://aur.archlinux.org/linux-xanmod.git
      - name: Modify PKGBUILD
        run: |
          cd linux-xanmod
          sed -i '/CONFIG_SECURITY_TOMOYO_ACTIVATION_TRIGGER/a \ \ scripts\/config --set-val CONFIG_X86_64_VERSION 2' PKGBUILD
          sed -i '/CONFIG_SECURITY_TOMOYO_ACTIVATION_TRIGGER/a \ \ scripts\/config --set-val CONFIG_LOCALVERSION "-x64v2"' PKGBUILD

          BRANCH=$(grep "_sf_branch=" PKGBUILD)
          OLDBRANCH="${BRANCH#_sf_branch=}"
          BRANCH="main"
          if [ "${{ github.event.inputs.use_edge }}" == "true" ]; then
            sed -i 's/_sf_branch=main/_sf_branch=edge/g' PKGBUILD
            BRANCH="edge"
          fi
          PKGVERSION=$(grep "pkgver=" PKGBUILD)
          OLDPATCHVERSION="${PKGVERSION#*"."}"
          MAJOR=$(grep "_major=" PKGBUILD)
          OLDVERSION="${MAJOR#_major=}"
          OLDMINORVERSION="${MAJOR#*.}"
          
          if [ ${{ github.event.inputs.new_kernel_minor_ver }} != ${OLDMINORVERSION} ]; then
            curl -LO https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.${{ github.event.inputs.new_kernel_minor_ver }}.tar.xz
            export NEW=$(sha256sum linux-6.${{ github.event.inputs.new_kernel_minor_ver }}.tar.xz | awk '{ print $1}')
            curl -LO https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-${OLDVERSION}.tar.xz
            export OLD=$(sha256sum linux-${OLDVERSION}.tar.xz | awk '{ print $1}')
            echo "sed -i 's/${OLD}/${NEW}/g' PKGBUILD" | bash
            echo "sed -i 's/_major=${OLDVERSION}/_major=6.${{ github.event.inputs.new_kernel_minor_ver }}/g' PKGBUILD" | bash
          fi
          MINORVERSION=${OLDMINORVERSION}
          
          if [ "${{ github.event.inputs.new_kernel_minor_ver }}" != "" ] && [ "${{ github.event.inputs.new_kernel_minor_ver }}" != ${OLDMINORVERSION} ]; then
            MINORVERSION="${{ github.event.inputs.new_kernel_minor_ver }}"
          fi
          if  [ "${{ github.event.inputs.new_kernel_patch_ver }}" != "" ] && [ "${{ github.event.inputs.new_kernel_patch_ver }}" != ${OLDPATCHVERSION} ]; then
            curl -LO https://sourceforge.net/projects/xanmod/files/releases/${BRANCH}/6.${MINORVERSION}.${{ github.event.inputs.new_kernel_patch_ver }}-xanmod1/patch-6.${MINORVERSION}.${{ github.event.inputs.new_kernel_patch_ver }}-xanmod1.xz
            export NEW=$(sha256sum patch-6.${MINORVERSION}.${{ github.event.inputs.new_kernel_patch_ver }}-xanmod1.xz | awk '{ print $1}')
            curl -LO https://sourceforge.net/projects/xanmod/files/releases/${OLDBRANCH}/${OLDVERSION}.${OLDPATCHVERSION}-xanmod1/patch-${OLDVERSION}.${OLDPATCHVERSION}-xanmod1.xz
            export OLD=$(sha256sum patch-${OLDVERSION}.${OLDPATCHVERSION}-xanmod1.xz | awk '{ print $1}')
            echo "sed -i 's/${OLD}/${NEW}/g' PKGBUILD" | bash
            echo "sed -i 's/pkgver=\${_major}."${OLDPATCHVERSION}"/pkgver=\${_major}."${{ github.event.inputs.new_kernel_patch_ver }}"/g' PKGBUILD" | bash
          fi
      - name: Set UserID
        run: |
          echo "USERID=$(id -u $(whoami))" >> $GITHUB_ENV
        env: 
          USERID: ''          
      - name: Build
        uses: docker://archlinux:latest
        with:
          entrypoint: '/bin/sh'
          args: ./build.sh ${{ env.USERID }} 
      - uses: actions/upload-artifact@v4
        with:
          name: linux-xanmod
          path: ${{ github.workspace }}/linux-xanmod/*.pkg.tar.zst

